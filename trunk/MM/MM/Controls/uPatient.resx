<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imgList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imgList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADE
        CAAAAk1TRnQBSQFMAgEBAgEAAQQBAAEEAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEP8AJwABCQIBAQoBBwIBAQc0AAEaAgEBIwFGAgEBfQFhAQkBEQHbAVABJgFW
        AfMBUAEkAVYB8wFhAQkBEQHbAUYCAQF9ARoCAQEjoAABCQIBAQoBQAGDAUYB/wE7AV0BKQH7AQcCAQEH
        LAABNQIBAVMBYAETASYB5gFbAW0B1AH/AYQBkAHnAf8BlQGgAe4B/wGVAZ8B7QH/AYMBjgHlAf8BVQFm
        Ac4B/wFeAQ8BJAHmATUCAQFTmAABCQIBAQoBSQGOAVAB/wFdAaMBZQH/AVgBnwFgAf8BQgF9AUEB/gEH
        AgEBCCQAATUCAQFTAVYBLwFiAfQBfgGEAeMB/wGhAawB9AH/AYEBiwHsAf8BZQFwAeQB/wFkAW8B4wH/
        AYEBhwHqAf8BnwGoAfEB/wF4AYEB3QH/AU0BJQFbAfQBNQIBAVOQAAEJAgEBCgFSAZoBWgH/AWQBrAFt
        Af8BgAHKAYIB/wF9AcgBgQH/AVoBoAFiAf8BQwF+AUEB/gEHAgEBCBwAARoCAQEiAWMBFAElAeUBgQGI
        AeYB/wGjAbAB9QH/AWABcAHnAf8BXwFuAeYB/wGJAZIB7QH/AYgBkgHsAf8BXAFoAeIB/wFbAWYB4QH/
        AZ8BqQHyAf8BeAGBAd0B/wFgAQ4BHwHlARoCAQEiiAABCQIBAQoBWgGmAWMB/wFsAbUBdgH/AYEBzgGJ
        Af8BgQHMAYcB/wF/AcoBgQH/AX8ByQGBAf8BWwGiAWMB/wFDAX8BQQH+AQcCAQEIGAABRwIBAX4BaQF8
        AeAB/wGkAbMB9wH/AWMBdwHrAf8BYgF1AeoB/wFhAXIB6An/AV4BawHlAf8BXQFqAeMB/wFcAWgB4gH/
        AZ8BqQHyAf8BWQFqAdEB/wFHAgEBfoQAAQgCAQEJAWIBsAFsAf8BdAG9AX8B/wGEAdIBkAH/AYEByQGF
        Af8BaQGyAXMB/wFsAbQBdgH/AYEByQGDAf8BgQHLAYIB/wFcAaMBZQH/AUEBcQE8Af0BBwIBAQgUAAFh
        AQoBEwHbAY4BnwHwAf8BhAGZAfQB/wFlAXwB7gH/AWQBeQHsAf8BYwF3AesB/wGQAZ0B8QH/AaYBrwHz
        Af8BYAFwAecB/wFfAW4B5gH/AV4BawHlAf8BgQGJAesB/wGFAZEB5wH/AWEBCQERAduEAAEuAgEBRgFk
        AR4BEwHkAYEByQGGAf8BgQHOAY0B/wFSAYMBUQH8AUECAQFvAUsCAgGLAWUBrQFwAf8BgQHMAYYB/wGB
        AcsBhQH/AV0BpAFmAf8BNgFvASwB/AEHAgEBCBAAAWABPwF+AfYBoAGzAfcB/wFuAYEB8gH/AWgBgQHw
        Af8BZgF/Ae8B/wFlAXwB7gH/AdMB2QH6Bf8BYgF1AeoB/wFhAXIB6AH/AWABcAHnAf8BZgF1AecB/wGZ
        AaUB8QH/AUwBMAFvAfaIAAEpAgEBPAFiASIBFgHmAXYBwAGBAf8BQQIBAW8IAAFNAgIBkQFnAa4BcQH/
        AYEBzQGJAf8BgQHNAYcB/wFfAaUBaAH/ATcBbwEtAfwBBwIBAQgMAAFkAUIBgQH2AaEBtgH4Af8BcAGE
        AfQB/wFpAYEB8wH/AWgBgQHxAf8BaAGBAfAJ/wFkAXkB7AH/AWMBdwHrAf8BYgF1AeoB/wFoAXgB6QH/
        AZsBqAHxAf8BTQEyAXAB9owAAS0CAQFDAT0CAQFlEAABTQICAZEBaAGvAXIB/wGBAc4BigH/AYEBzgGJ
        Af8BYAGmAWkB/wE4AW8BLgH8AQcCAQEICAABYQENARMB2wGRAaYB8wH/AYgBoQH4Af8BawGBAfQB/wFq
        AYEB8wH/AWkBgQHzCf8BZgF/Ae8B/wFlAXwB7gH/AWQBeQHsAf8BggGTAfEB/wGJAZgB7AH/AWEBCgER
        AduoAAFNAgIBkQFpAbABcwH/AYEBzwGNAf8BgQHPAYsB/wFhAacBagH/AUIBhQFJAf8BBwIBAQgEAAFH
        AgEBfgF1AYEB7AH/AakBvQH7Af8BbAGCAfUB/wFrAYEB9QH/AWsBgQH0Cf8BaAGBAfEB/wFoAYEB8AH/
        AWYBfwHvAf8BpQG1AfgB/wFmAXkB3QH/AUcCAQF+rAABTQICAZEBawGyAXUB/wGCAdEBjwH/AYEByAGF
        Af8BYAGmAWkB/wFFAgEBewQAARoCAQEiAWcBGQEnAeUBgwGXAfAB/wGpAb0B+wH/AWwBggH1Af8BbAGC
        AfUJ/wFqAYEB8wH/AWkBgQHzAf8BpgG5AfkB/wGBAY0B6gH/AWMBFQElAeUBGgIBASKwAAFNAgIBkQFs
        AbMBdgH/AWgBrwFyAf8BRQIBAXkMAAE1AgEBUwFpAUEBdAH0AYQBlwHxAf8BqQG9AfsB/wGKAaMB+AH/
        AXQBiQH2Af8BdAGJAfYB/wGJAaIB+AH/AagBvAH6Af8BgQGSAewB/wFcATUBawH0ATUCAQFTuAABTQIC
        AZEBRwIBAX8UAAE1AgEBUwFoARoBLAHmAXcBgwHuAf8BkgGmAfQB/wGgAbQB+AH/AaABtAH4Af8BkQGm
        AfMB/wFxAYEB6QH/AWIBGAEpAeYBNQIBAVPcAAEaAgEBIwFHAgEBfQFmAQ4BEwHbAWYBPQFsAfMBZAE7
        AWoB8wFiAQ0BEwHbAUcCAQF9ARoCAQEj/wCRAAFCAU0BPgcAAT4DAAEoAwABQAMAARADAAEBAQABAQUA
        AYAXAAP/AQAE/wQAAfkB/wHwAQ8EAAHwAf8B4AEHBAAB4AF/AcABAwQAAcABPwGAAQEEAAGAAR8BgAEB
        BQABDwGAAQEFAAEHAYABAQQAAYYBAwGAAQEEAAHPAQEBgAEBBAAB/wKAAQEEAAH/AcABgAEBBAAB/wHh
        AcABAwQAAf8B8wHgAQcEAAL/AfABDwQABP8EAAs=
</value>
  </data>
</root>