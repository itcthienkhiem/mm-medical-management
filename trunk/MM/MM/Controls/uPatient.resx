<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imgList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imgList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAE
        CQAAAk1TRnQBSQFMAgEBAgEAAQQBAAEEAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEP8AJwADCQEKBAc0AAIbAR4BIwFBAUgBZQF9AT0BUAGqAdsBMgFKAboB8wEw
        AUgBuAHzATgBSwGmAdsBPwFFAWMBfQIbAR0BI6AAAwkBCgE4AYMBPgH/ATMBewE5AfsEBywAATUBOAFF
        AVMBQgFWAbkB5gFTAWUB1AH/AYQBkAHnAf8BlQGgAe4B/wGVAZ8B7QH/AYMBjgHlAf8BTQFeAc4B/wE0
        AUkBrQHmATMBNgFDAVOYAAMJAQoBQQGOAUgB/wFVAaMBXQH/AVABnwFYAf8BNAF9AToB/gEHAQgBBwEI
        JAABNgE5AUUBUwFDAVsBygH0AXYBhAHjAf8BoQGsAfQB/wGAAYsB7AH/AV0BaAHkAf8BXAFnAeMB/wF+
        AYcB6gH/AZ8BqAHxAf8BcAF9Ad0B/wEvAUcBuAH0ATMBNgFDAVOQAAMJAQoBSgGaAVIB/wFcAawBZQH/
        AXgBygGCAf8BdQHIAX8B/wFSAaABWgH/ATUBfgE7Af4BBwEIAQcBCBwAAhsBHQEiAU0BYgHEAeUBeQGI
        AeYB/wGjAbAB9QH/AVgBaAHnAf8BVwFmAeYB/wGJAZIB7QH/AYgBkgHsAf8BVAFgAeIB/wFTAV4B4QH/
        AZ8BqQHyAf8BcAF+Ad0B/wE4AUsBrwHlARoBGwEdASKIAAMJAQoBUgGmAVsB/wFkAbUBbgH/AX8BzgGJ
        Af8BfAHMAYcB/wF3AcoBgQH/AXcByQGBAf8BUwGiAVsB/wE2AX8BPAH+AQcBCAEHAQgYAAFJAU8BbAF+
        AWEBdAHgAf8BpAGzAfcB/wFbAW8B6wH/AVoBbQHqAf8BWQFqAegJ/wFWAWMB5QH/AVUBYgHjAf8BVAFg
        AeIB/wGfAakB8gH/AVEBYgHRAf8BQAFHAWUBfoQAAwgBCQFaAbABZAH/AWwBvQF3Af8BhAHSAZAB/wF7
        AckBhQH/AWEBsgFrAf8BZAG0AW4B/wF5AckBgwH/AXkBywGCAf8BVAGjAV0B/wE2AYABPAH9AQcBCAEH
        AQgUAAFXAWsBwwHbAY4BnwHwAf8BhAGZAfQB/wFdAXQB7gH/AVwBcQHsAf8BWwFvAesB/wGQAZ0B8QH/
        AaYBrwHzAf8BWAFoAecB/wFXAWYB5gH/AVYBYwHlAf8BfgGJAesB/wGFAZEB5wH/AT8BUQGsAduEAAEy
        ATkBMwFGAV0BpQFmAeQBegHJAYYB/wGBAc4BjQH/AVIBpAFbAfwBQwFTAUUBbwFLAWMBTQGLAV0BrQFo
        Af8BfQHMAYYB/wF6AcsBhQH/AVUBpAFeAf8BNgF/ATwB/AEHAQgBBwEIEAABWAFwAeAB9gGgAbMB9wH/
        AWYBgQHyAf8BYAF5AfAB/wFeAXcB7wH/AV0BdAHuAf8B0wHZAfoF/wFaAW0B6gH/AVkBagHoAf8BWAFo
        AecB/wFeAW0B5wH/AZkBpQHxAf8BOQFRAcMB9ogAASwBMQEtATwBXgGnAWcB5gFuAcABegH/AUUBVQFG
        AW8IAAFMAWcBTwGRAV8BrgFpAf8BfgHNAYkB/wF9Ac0BhwH/AVcBpQFgAf8BNwGAAT0B/AEHAQgBBwEI
        DAABXAF1AeQB9gGhAbYB+AH/AWgBhAH0Af8BYQF9AfMB/wFgAXsB8QH/AWABeQHwCf8BXAFxAewB/wFb
        AW8B6wH/AVoBbQHqAf8BYAFwAekB/wGbAagB8QH/AT4BVQHHAfaMAAEwATcBMQFDAUEBUAFDAWUQAAFN
        AWgBTwGRAWABrwFqAf8BgAHOAYoB/wF/Ac4BiQH/AVgBpgFhAf8BOAGBAT4B/AEHAQgBBwEICAABYQF0
        AcwB2wGRAaYB8wH/AYgBoQH4Af8BYwGBAfQB/wFiAX8B8wH/AWEBfQHzCf8BXgF3Ae8B/wFdAXQB7gH/
        AVwBcQHsAf8BggGTAfEB/wGJAZgB7AH/AUgBXAG1AduoAAFNAWgBUAGRAWEBsAFrAf8BgQHPAY0B/wGA
        Ac8BiwH/AVkBpwFiAf8BOgGFAUEB/wEHAQgBBwEIBAABTgFUAXEBfgFtAYEB7AH/AakBvQH7Af8BZAGC
        AfUB/wFjAYEB9QH/AWMBgQH0Cf8BYAF7AfEB/wFgAXkB8AH/AV4BdwHvAf8BpQG1AfgB/wFeAXEB3QH/
        AUYBTAFqAX6sAAFNAWgBUAGRAWMBsgFtAf8BggHRAY8B/wF7AcgBhQH/AVgBpgFhAf8BQgFUAUQBewQA
        ARsBHAEeASIBZgF7AdoB5QGDAZcB8AH/AakBvQH7Af8BZAGCAfUB/wFkAYIB9Qn/AWIBfwHzAf8BYQF9
        AfMB/wGmAbkB+QH/AXwBjQHqAf8BUAFlAccB5QIbAR0BIrAAAU0BaQFQAZEBZAGzAW4B/wFgAa8BagH/
        AUQBVgFGAXkMAAE6AT0BSQFTAWcBfwHrAfQBhAGXAfEB/wGpAb0B+wH/AYoBowH4Af8BbAGJAfYB/wFs
        AYkB9gH/AYkBogH4Af8BqAG8AfoB/wGAAZIB7AH/AVQBbAHZAfQBNwE6AUcBU7gAAU0BaQFQAZEBSAFc
        AUoBfxQAAToBPQFJAVMBaAF9Ad4B5gFvAYMB7gH/AZIBpgH0Af8BoAG0AfgB/wGgAbQB+AH/AZEBpgHz
        Af8BaQF+AekB/wFcAXEB0gHmATgBOwFIAVPcAAIcAR8BIwFPAVUBcgF9AWYBegHSAdsBZgF+AeoB8wFk
        AXwB6AHzAWIBdQHNAdsBTQFTAW8BfQIcAR4BI/8AkQABQgFNAT4HAAE+AwABKAMAAUADAAEQAwABAQEA
        AQEFAAGAFwAD/wEABP8EAAH5Af8B8AEPBAAB8AH/AeABBwQAAeABfwHAAQMEAAHAAT8BgAEBBAABgAEf
        AYABAQUAAQ8BgAEBBQABBwGAAQEEAAGGAQMBgAEBBAABzwEBAYABAQQAAf8CgAEBBAAB/wHAAYABAQQA
        Af8B4QHAAQMEAAH/AfMB4AEHBAAC/wHwAQ8EAAT/BAAL
</value>
  </data>
</root>