<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imgList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imgList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABA
        CAAAAk1TRnQBSQFMAgEBAgEAAQQBAAEEAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEP8AJwADCQEKBAc0AAMaASMDRgF9AWEBWAFaAdsBYQFCAVMB8wFhAUIBUwHz
        AWEBWAFaAdsDRgF9AxoBI6AAAwkBCgFLAYMBUQH/AUwBXAEoAfsEBywAAzUBUwFiAVMBVAHmAWYBeAHU
        Af8BhAGQAecB/wGVAaAB7gH/AZUBnwHtAf8BgwGOAeUB/wFgAXEBzgH/AWIBUgFUAeYDNQFTmAADCQEK
        AVQBjgFbAf8BaAGjAXAB/wFjAZ8BawH/AU0BgAFIAf4DBwEIJAADNQFTAWEBQQFWAfQBgQGEAeMB/wGh
        AawB9AH/AYEBiwHsAf8BcAF7AeQB/wFvAXoB4wH/AYEBhwHqAf8BnwGoAfEB/wKBAd0B/wFcAUEBVAH0
        AzUBU5AAAwkBCgFdAZoBZQH/AW8BrAF4Af8BgQHKAYIB/wGBAcgBgQH/AWUBoAFtAf8BTgGAAUgB/gMH
        AQgcAAMaASIBZwFUAVUB5QGBAYgB5gH/AaMBsAH1Af8BawF7AecB/wFqAXkB5gH/AYkBkgHtAf8BiAGS
        AewB/wFnAXMB4gH/AWYBcQHhAf8BnwGpAfIB/wKBAd0B/wFnAlQB5QMaASKIAAMJAQoBZQGmAW4B/wF3
        AbUBgQH/AYEBzgGJAf8BgQHMAYcB/wGBAcoBgQH/AYEByQGBAf8BZgGiAW4B/wFOAYABSAH+AwcBCBgA
        A0cBfgF0AYEB4AH/AaQBswH3Af8BbgGBAesB/wFtAYAB6gH/AWwBfQHoCf8BaQF2AeUB/wFoAXUB4wH/
        AWcBcwHiAf8BnwGpAfIB/wFkAXUB0QH/A0cBfoQAAwgBCQFtAbABdwH/AX8BvQGBAf8BhAHSAZAB/wGB
        AckBhQH/AXQBsgF+Af8BdwG0AYEB/wGBAckBgwH/AYEBywGCAf8BZwGjAXAB/wFBAWkBQQH9AwcBCBQA
        AWEBWAFaAdsBjgGfAfAB/wGEAZkB9AH/AXABgQHuAf8BbwGBAewB/wFuAYEB6wH/AZABnQHxAf8BpgGv
        AfMB/wFrAXsB5wH/AWoBeQHmAf8BaQF2AeUB/wGBAYkB6wH/AYUBkQHnAf8BYQFYAVoB24QAAy4BRgFk
        AlIB5AGBAckBhgH/AYEBzgGNAf8BUgF5AUkB/ANBAW8DSwGLAXABrQF7Af8BgQHMAYYB/wGBAcsBhQH/
        AWgBpAFxAf8BNgFnASwB/AMHAQgQAAFkAUgBZAH2AaABswH3Af8BeQGBAfIB/wFzAYEB8AH/AXEBgQHv
        Af8BcAGBAe4B/wHTAdkB+gX/AW0BgAHqAf8BbAF9AegB/wFrAXsB5wH/AXEBgAHnAf8BmQGlAfEB/wFX
        AT8BWwH2iAADKQE8AWICVAHmAYEBwAGBAf8DQQFvCAADTQGRAXIBrgF8Af8BgQHNAYkB/wGBAc0BhwH/
        AWoBpQFzAf8BNwFnASwB/AMHAQgMAAFkAUoBZAH2AaEBtgH4Af8BewGEAfQB/wF0AYEB8wH/AXMBgQHx
        Af8BcwGBAfAJ/wFvAYEB7AH/AW4BgQHrAf8BbQGAAeoB/wFzAYEB6QH/AZsBqAHxAf8BWAE/AVwB9owA
        Ay0BQwM9AWUQAANNAZEBcwGvAX0B/wGBAc4BigH/AYEBzgGJAf8BawGmAXQB/wE4AWcBLAH8AwcBCAgA
        AWECWgHbAZEBpgHzAf8BiAGhAfgB/wF2AYEB9AH/AXUBgQHzAf8BdAGBAfMJ/wFxAYEB7wH/AXABgQHu
        Af8BbwGBAewB/wGCAZMB8QH/AYkBmAHsAf8BYQFYAVoB26gAA00BkQF0AbABfgH/AYEBzwGNAf8BgQHP
        AYsB/wFsAacBdQH/AU0BhQFUAf8DBwEIBAADRwF+AYABgQHsAf8BqQG9AfsB/wF3AYIB9QH/AXYBgQH1
        Af8BdgGBAfQJ/wFzAYEB8QH/AXMBgQHwAf8BcQGBAe8B/wGlAbUB+AH/AXEBgQHdAf8DRwF+rAADTQGR
        AXYBsgGAAf8BggHRAY8B/wGBAcgBhQH/AWsBpgF0Af8DRQF7BAADGgEiAWcBVAFVAeUBgwGXAfAB/wGp
        Ab0B+wH/AXcBggH1Af8BdwGCAfUJ/wF1AYEB8wH/AXQBgQHzAf8BpgG5AfkB/wGBAY0B6gH/AWcBVAFV
        AeUDGgEisAADTQGRAXcBswGBAf8BcwGvAX0B/wNFAXkMAAM1AVMBaQFKAVoB9AGEAZcB8QH/AakBvQH7
        Af8BigGjAfgB/wF/AYkB9gH/AX8BiQH2Af8BiQGiAfgB/wGoAbwB+gH/AYEBkgHsAf8BZwFFAVgB9AM1
        AVO4AANNAZEDRwF/FAADNQFTAWgCVAHmAYEBgwHuAf8BkgGmAfQB/wGgAbQB+AH/AaABtAH4Af8BkQGm
        AfMB/wF8AYEB6QH/AWICVAHmAzUBU9wAAxoBIwFHAkYBfQFmAloB2wFmAUoBWAHzAWQBSgFWAfMBYgJa
        AdsBRwJGAX0DGgEj/wCRAAFCAU0BPgcAAT4DAAEoAwABQAMAARADAAEBAQABAQUAAYAXAAP/AQAE/wQA
        AfkB/wHwAQ8EAAHwAf8B4AEHBAAB4AF/AcABAwQAAcABPwGAAQEEAAGAAR8BgAEBBQABDwGAAQEFAAEH
        AYABAQQAAYYBAwGAAQEEAAHPAQEBgAEBBAAB/wKAAQEEAAH/AcABgAEBBAAB/wHhAcABAwQAAf8B8wHg
        AQcEAAL/AfABDwQABP8EAAs=
</value>
  </data>
</root>