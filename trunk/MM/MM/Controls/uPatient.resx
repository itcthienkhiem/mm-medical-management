<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imgList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imgList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADE
        CAAAAk1TRnQBSQFMAgEBAgEAAQQBAAEEAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEP8AJwABCQIBAQoBBwIBAQc0AAEaAgEBIwFGAgEBfQFhAQgBDgHbAVIBIgFP
        AfMBUgEgAU8B8wFhAQgBDgHbAUYCAQF9ARoCAQEjoAABCQIBAQoBQQGDAUcB/wE8AVsBJwH7AQcCAQEH
        LAABNQIBAVMBYgEPAR8B5gFcAW4B1AH/AYQBkAHnAf8BlQGgAe4B/wGVAZ8B7QH/AYMBjgHlAf8BVgFn
        Ac4B/wFgAQ4BHgHmATUCAQFTmAABCQIBAQoBSgGOAVEB/wFeAaMBZgH/AVkBnwFhAf8BQwF9AUEB/gEH
        AgEBCCQAATUCAQFTAVcBLAFbAfQBfwGEAeMB/wGhAawB9AH/AYEBiwHsAf8BZgFxAeQB/wFlAXAB4wH/
        AYEBhwHqAf8BnwGoAfEB/wF5AYEB3QH/AVABIQFTAfQBNQIBAVOQAAEJAgEBCgFTAZoBWwH/AWUBrAFu
        Af8BgQHKAYIB/wF+AcgBgQH/AVsBoAFjAf8BRAF+AUEB/gEHAgEBCBwAARoCAQEiAWQBEQEeAeUBgQGI
        AeYB/wGjAbAB9QH/AWEBcQHnAf8BYAFvAeYB/wGJAZIB7QH/AYgBkgHsAf8BXQFpAeIB/wFcAWcB4QH/
        AZ8BqQHyAf8BeQGBAd0B/wFhAQ0BGgHlARoCAQEiiAABCQIBAQoBWwGmAWQB/wFtAbUBdwH/AYEBzgGJ
        Af8BgQHMAYcB/wGAAcoBgQH/AYAByQGBAf8BXAGiAWQB/wFEAX8BQQH+AQcCAQEIGAABRwIBAX4BagF9
        AeAB/wGkAbMB9wH/AWQBeAHrAf8BYwF2AeoB/wFiAXMB6An/AV8BbAHlAf8BXgFrAeMB/wFdAWkB4gH/
        AZ8BqQHyAf8BWgFrAdEB/wFHAgEBfoQAAQgCAQEJAWMBsAFtAf8BdQG9AYAB/wGEAdIBkAH/AYEByQGF
        Af8BagGyAXQB/wFtAbQBdwH/AYEByQGDAf8BgQHLAYIB/wFdAaMBZgH/AUEBbwE8Af0BBwIBAQgUAAFh
        AQkBDgHbAY4BnwHwAf8BhAGZAfQB/wFmAX0B7gH/AWUBegHsAf8BZAF4AesB/wGQAZ0B8QH/AaYBrwHz
        Af8BYQFxAecB/wFgAW8B5gH/AV8BbAHlAf8BgQGJAesB/wGFAZEB5wH/AWEBCAEOAduEAAEuAgEBRgFk
        ARkBEAHkAYEByQGGAf8BgQHOAY0B/wFSAX8BTwH8AUECAQFvAUsCAgGLAWYBrQFxAf8BgQHMAYYB/wGB
        AcsBhQH/AV4BpAFnAf8BNgFtASoB/AEHAgEBCBAAAWEBPAF2AfYBoAGzAfcB/wFvAYEB8gH/AWkBgQHw
        Af8BZwGAAe8B/wFmAX0B7gH/AdMB2QH6Bf8BYwF2AeoB/wFiAXMB6AH/AWEBcQHnAf8BZwF2AecB/wGZ
        AaUB8QH/AU0BLAFnAfaIAAEpAgEBPAFiAR0BEwHmAXcBwAGBAf8BQQIBAW8IAAFNAgIBkQFoAa4BcgH/
        AYEBzQGJAf8BgQHNAYcB/wFgAaUBaQH/ATcBbQErAfwBBwIBAQgMAAFkAT8BdwH2AaEBtgH4Af8BcQGE
        AfQB/wFqAYEB8wH/AWkBgQHxAf8BaQGBAfAJ/wFlAXoB7AH/AWQBeAHrAf8BYwF2AeoB/wFpAXkB6QH/
        AZsBqAHxAf8BTgEuAWgB9owAAS0CAQFDAT0CAQFlEAABTQICAZEBaQGvAXMB/wGBAc4BigH/AYEBzgGJ
        Af8BYQGmAWoB/wE4AW0BLAH8AQcCAQEICAABYQEKAQ4B2wGRAaYB8wH/AYgBoQH4Af8BbAGBAfQB/wFr
        AYEB8wH/AWoBgQHzCf8BZwGAAe8B/wFmAX0B7gH/AWUBegHsAf8BggGTAfEB/wGJAZgB7AH/AWEBCQEO
        AduoAAFNAgIBkQFqAbABdAH/AYEBzwGNAf8BgQHPAYsB/wFiAacBawH/AUMBhQFKAf8BBwIBAQgEAAFH
        AgEBfgF2AYEB7AH/AakBvQH7Af8BbQGCAfUB/wFsAYEB9QH/AWwBgQH0Cf8BaQGBAfEB/wFpAYEB8AH/
        AWcBgAHvAf8BpQG1AfgB/wFnAXoB3QH/AUcCAQF+rAABTQICAZEBbAGyAXYB/wGCAdEBjwH/AYEByAGF
        Af8BYQGmAWoB/wFFAgEBewQAARoCAQEiAWcBFQEfAeUBgwGXAfAB/wGpAb0B+wH/AW0BggH1Af8BbQGC
        AfUJ/wFrAYEB8wH/AWoBgQHzAf8BpgG5AfkB/wGBAY0B6gH/AWQBEgEeAeUBGgIBASKwAAFNAgIBkQFt
        AbMBdwH/AWkBrwFzAf8BRQIBAXkMAAE1AgEBUwFpATsBawH0AYQBlwHxAf8BqQG9AfsB/wGKAaMB+AH/
        AXUBiQH2Af8BdQGJAfYB/wGJAaIB+AH/AagBvAH6Af8BgQGSAewB/wFdATIBYQH0ATUCAQFTuAABTQIC
        AZEBRwIBAX8UAAE1AgEBUwFoARYBJQHmAXgBgwHuAf8BkgGmAfQB/wGgAbQB+AH/AaABtAH4Af8BkQGm
        AfMB/wFyAYEB6QH/AWIBFQEiAeYBNQIBAVPcAAEaAgEBIwFHAgEBfQFmAQoBDgHbAWYBNwFjAfMBZAE1
        AWAB8wFiAQoBDgHbAUcCAQF9ARoCAQEj/wCRAAFCAU0BPgcAAT4DAAEoAwABQAMAARADAAEBAQABAQUA
        AYAXAAP/AQAE/wQAAfkB/wHwAQ8EAAHwAf8B4AEHBAAB4AF/AcABAwQAAcABPwGAAQEEAAGAAR8BgAEB
        BQABDwGAAQEFAAEHAYABAQQAAYYBAwGAAQEEAAHPAQEBgAEBBAAB/wKAAQEEAAH/AcABgAEBBAAB/wHh
        AcABAwQAAf8B8wHgAQcEAAL/AfABDwQABP8EAAs=
</value>
  </data>
</root>